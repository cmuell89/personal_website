{"version":3,"sources":["webpack:///./src/pages/posts.js"],"names":["StyledWall","styled","div","media","xsmall","small","medium","ContentContainer","Posts","data","location","posts","allMarkdownRemark","edges","map","post","node","key","id","size","postsQuery"],"mappings":"wsBAUA,IAAMA,EAAaC,IAAOC,IAAV,wEAAGD,CAAH,iFAOZE,IAAMC,OAPM,KAcZD,IAAME,MAdM,KAoBZF,IAAMG,OApBM,MA2BVC,EAAmBN,IAAOC,IAAV,8EAAGD,CAAH,mCAKP,SAASO,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACrBC,EAAUF,EAAKG,kBAAtBC,MACR,OACE,kBAAC,IAAD,CAAQH,SAAUA,GAChB,kBAACH,EAAD,KACA,uDACA,kBAACP,EAAD,KACGW,EAAMG,KAAI,gBAASC,EAAT,EAAGC,KAAH,OAAqB,kBAAC,IAAD,CAAaC,IAAKF,EAAKG,GAAIH,KAAMA,EAAMI,KAAK,iBAW7E,IAAMC,EAAU","file":"component---src-pages-posts-js-09185e17c4b47642935d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout';\nimport { ArticleCard } from '../components';\nimport media from '../utils/mediaQueryTemplates';\n\n// Styled components\nconst StyledWall = styled.div`\n  /* Center content on xsmall devices */\n  display: grid;\n  grid-template-columns: 100%;\n  grid-gap: 1em;\n  padding: 1em;\n\n  ${media.xsmall`\n    padding: 0;\n    grid-template-columns: 10em 10em 10em;\n    grid-gap: 1em;\n  `}\n\n\n  ${media.small`\n    padding: 0;\n    grid-template-columns: 12em 12em 12em;\n    grid-gap: 1em;\n  `}\n\n  ${media.medium`\n    grid-template-columns: 12em 12em 12em;\n    grid-gap: 1em;\n  `}\n`;\n\n// Styled components\nconst ContentContainer = styled.div`\n  max-width: 40em;\n  padding: 0 1em;\n`;\n\nexport default function Posts({ data, location }) {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Layout location={location}>\n      <ContentContainer>\n      <h1>List of all my posts...</h1>\n      <StyledWall>\n        {posts.map(({ node: post }) => (<ArticleCard key={post.id} post={post} size=\"medium\" />))}\n      </StyledWall>\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nPosts.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport const postsQuery = graphql`\n  query postsQuery {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC },\n      filter: {\n        frontmatter: { draft: { eq: false }}\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            authors\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            type\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 650, maxHeight: 800) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}