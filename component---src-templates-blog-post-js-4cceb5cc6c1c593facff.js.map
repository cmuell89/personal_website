{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["ArticleContainer","styled","div","media","small","Article","ArticleHeader","ArticleHeadings","PostTitle","h1","ArticleEndHorizontalRule","hr","PostDate","p","PostContent","BlogPostTemplate","data","location","post","markdownRemark","pageTitle","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","authors","path","fields","slug","text","coverDesc","img","featuredImage","pageQuery"],"mappings":"mfAWA,IAAMA,EAAmBC,IAAOC,IAAV,8EAAGD,CAAH,oDAKlBE,IAAMC,MALY,MAUhBC,EAAUJ,IAAOC,IAAV,qEAAGD,CAAH,iDAKTE,IAAMC,MALG,MAUPE,EAAgBL,IAAOC,IAAV,2EAAGD,CAAH,yBAGbM,EAAkBN,IAAOC,IAAV,6EAAGD,CAAH,MACfO,EAAYP,IAAOQ,GAAV,uEAAGR,CAAH,0DAKTS,EAA2BT,IAAOU,GAAV,sFAAGV,CAAH,wBAGxBW,EAAWX,IAAOY,EAAV,sEAAGZ,CAAH,sBAiBRa,EAAcb,IAAOC,IAAV,yEAAGD,CAAH,wEAYF,SAASc,EAAT,GAA+C,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACvBC,EAASF,EAAzBG,eAER,OACE,kBAAC,IAAD,CAAQF,SAAUA,EAAUG,UAAWF,EAAKG,YAAYC,OACtD,kBAACtB,EAAD,KACE,kBAACK,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAYU,EAAKG,YAAYC,OAC7B,kBAACV,EAAD,KAAWM,EAAKG,YAAYE,QAGhC,kBAACT,EAAD,CAAaU,wBAAyB,CAAEC,OAAQP,EAAKQ,QACrD,kBAAChB,EAAD,MACA,kBAAC,IAAD,CACEiB,QAAST,EAAKG,YAAYM,QAC1BC,KAAMV,EAAKW,OAAOC,KAClBR,MAAOJ,EAAKG,YAAYC,QAE1B,kBAAC,IAAD,CACES,KAAMb,EAAKG,YAAYW,UACvBC,IAAKf,EAAKG,YAAYa,mBAmB3B,IAAMC,EAAS","file":"component---src-templates-blog-post-js-4cceb5cc6c1c593facff.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n// import Img from 'gatsby-image';\n\nimport Layout from '../components/layout';\nimport { ArticleCoverAbout, ArticleFooter } from '../components';\nimport media from '../utils/mediaQueryTemplates';\n\n\n// Styled components\nconst ArticleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1em;\n\n  ${media.small`\n    margin-left: 80px;\n    padding: 0;\n  `}\n`;\nconst Article = styled.div`\n  max-width: 100%;\n  flex-shrink: 0;\n  flex-grow: 0;\n  \n  ${media.small`\n    max-width: 40em;\n    margin-right: 2em;\n  `}\n`;\nconst ArticleHeader = styled.div`\n  padding-bottom: 1em;\n`;\nconst ArticleHeadings = styled.div``;\nconst PostTitle = styled.h1`\n  font-size: 2em;\n  line-height: 1.1em;\n  margin-bottom: 0.5em;\n`;\nconst ArticleEndHorizontalRule = styled.hr`\n  margin-bottom: 1em;\n`;\nconst PostDate = styled.p`\n  font-size: 0.9em;\n`;\n// const CoverImageContainer = styled.div`\n//   flex-grow: 1;\n//   flex-shrink: 1;\n//   overflow: hidden;\n//   display: none;\n\n//   ${media.small`\n//     display: block;\n//   `}\n// `;\n// const CoverImage = styled(Img)`\n//   width: 350px;\n//   overflow-x: hidden;\n// `;\nconst PostContent = styled.div`\n  & img {\n    display: block;\n    margin: 0 auto;\n  }\n\n  & blockquote {\n    font-size: 0.9rem;\n  }  \n`;\n\n\nexport default function BlogPostTemplate({ data, location }) {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout location={location} pageTitle={post.frontmatter.title}>\n      <ArticleContainer>\n        <Article>\n          <ArticleHeader>\n            <ArticleHeadings>\n              <PostTitle>{post.frontmatter.title}</PostTitle>\n              <PostDate>{post.frontmatter.date}</PostDate>\n            </ArticleHeadings>\n          </ArticleHeader>\n          <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n          <ArticleEndHorizontalRule />\n          <ArticleFooter\n            authors={post.frontmatter.authors}\n            path={post.fields.slug}\n            title={post.frontmatter.title}\n          />\n          <ArticleCoverAbout\n            text={post.frontmatter.coverDesc}\n            img={post.frontmatter.featuredImage}\n          />\n        </Article>\n        {/* {post.frontmatter.featuredImage\n          ? (\n            <CoverImageContainer>\n            </CoverImageContainer>\n          )\n          : null\n        } */}\n      </ArticleContainer>\n    </Layout>\n  );\n}\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        authors\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        coverDesc\n        featuredImage {\n          childImageSharp {\n            fluid(maxHeight: 1000) {\n              ...GatsbyImageSharpFluid\n              ...GatsbyImageSharpFluidLimitPresentationSize\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}